library(readr)
Book1 <- read_delim("D:/Skóli/Forritun-2020/GAGN/Verkefni í GAGN/verk2/2c/Book1.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(Book1)
table(Book1)
table(Book1[1])
table(Book1[2])
table(Book1.Nafn)
table(Nafn.Book1)
table(Book1[1], Book1[2])
table(Book1)
data <- read.Book1
data
data <- read.csv
data
cut(data)
View(data)
View(Book1)
View(data)
delete.data
data
data <- read.csv(Book1)
View(data)
realData <- read.csv(Book1)
realData <- read.csv2(Book1)
print(Book1)
plot(Book1)
name_of_place <- table(Logbylaskra_2019[1])
remove(data)
plot(Book1)
library(xlsReadWrite)
filenames <- list.files("D:\Skóli\Forritun-2020\GAGN\Verkefni í GAGN\verk2\2c", pattern="*.csv", full.names=TRUE)
for(i in 1:length(filenames)){
a <- read.csv(filenames[i])
write.xls(a, paste("file",i,".xls", sep=""))
}
library(xlsReadWrite)
filenames <- list.files("D:\Skóli\Forritun-2020\GAGN\Verkefni í GAGN\verk2\2c\Book1", pattern="*.csv", full.names=TRUE)
for(i in 1:length(filenames)){
a <- read.csv(filenames[i])
write.xls(a, paste("file",i,".xls", sep=""))
}
read.csv('D:\Skóli\Forritun-2020\GAGN\Verkefni í GAGN\verk2\2c\Book1.csv', stringsAsFactors = FALSE)
read.csv('Skóli\Forritun-2020\GAGN\Verkefni í GAGN\verk2\2c\Book1.csv', stringsAsFactors = FALSE)
library(readxl)
Book1_Copy <- read_excel("D:/Skóli/Forritun-2020/GAGN/Verkefni í GAGN/verk2/2c/Book1 Copy.xlsx")
View(Book1_Copy)
plot(Book1_Copy)
table(Book1_Copy)
remove(Book1_Copy)
data <- read.csv(file="Book1.csv",header=TRUE,sep=",")
m<-tree[1,4:28]
n<-tree[2,4:28]
plot(unlist(m),unlist(n))
data <- read.csv(file="Book1.csv",header=TRUE,sep=",");
m<-tree[1,4:28]
n<-tree[2,4:28]
plot(unlist(m),unlist(n))
data <- read.csv(file="D:\Skóli\Forritun-2020\GAGN\Verkefni í GAGN\verk2\2c\Book1.csv",header=TRUE,sep=",");
m<-tree[1,4:28]
n<-tree[2,4:28]
plot(unlist(m),unlist(n))
library(readxl)
Copy_of_Corona_Virus_Stats <- read_excel("D:/Skóli/Forritun-2020/GAGN/Verkefni í GAGN/verk4/Copy of Corona_Virus_Stats.xlsx")
View(Copy_of_Corona_Virus_Stats)
table(Copy_of_Corona_Virus_Stats[1])
require(stats)
table(stats.Copy_of_Corona_Virus_Stats[1], stats.Copy_of_Corona_Virus_Stats[2])
require(stats)
table(stats.Reading_Taken, stats.Total_Confirmed)
require(stats)
table(stats.Reading_Taken, stats.Total_Confirmed)
summery(Copy_of_Corona_Virus_Stats[1])
summary(Copy_of_Corona_Virus_Stats[1])
cro(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
library(expass)
summary(Copy_of_Corona_Virus_Stats[1])
cro(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
install.packages("expss")
library(expass)
summary(Copy_of_Corona_Virus_Stats[1])
cro(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
cro(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
library(expss)
summary(Copy_of_Corona_Virus_Stats[1])
cro(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
library(expss)
summary(Copy_of_Corona_Virus_Stats[1])
cro(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
RandT <- cro(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
plot(RandT)
table(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
plot(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
plot(x.Copy_of_Corona_Virus_Stats[1], y.Copy_of_Corona_Virus_Stats[2])
RandT <- cro(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2], Copy_of_Corona_Virus_Stats[4])
plot(RandT)
RandT
RandT <- cro(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
RandT
plot(Copy_of_Corona_Virus_Stats[1])
plot(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
with(Copy_of_Corona_Virus_Stats,
barplot(
table(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2]),
beside = TRUE,
legend = TRUE)
)
RandT <- cro(Copy_of_Corona_Virus_Stats[1]) + cro(Copy_of_Corona_Virus_Stats[2])
x <- Copy_of_Corona_Virus_Stats[1]
y <- Copy_of_Corona_Virus_Stats[2]
d <- read.table("data.txt", header = T)
plot(d$y~s$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
title("Data", xlab = "X", ylab = "Y")
#RandT <- cro(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
#RandT
remove(RandT)
plot(Copy_of_Corona_Virus_Stats[1])
summary(data[1])
data <- Copy_of_Corona_Virus_Stats
summary(data[1])
with(data,
barplot(
table(data[1], data[2]),
beside = TRUE,
legend = TRUE)
)
x <- data[1]
y <- data[2]
d <- read.table("data.txt", header = T)
plot(d$y~s$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
title("Data", xlab = "X", ylab = "Y")
pcts = lapply(data[,-1], function(x){ x /total_col })
total_col = apply(data[,-1], 1, sum)
pcts = lapply(data[,-1], function(n){ n/total_col })
total_col <- apply(data[,-1], 1, sum)
pcts <- lapply(data[,-1], function(n){ n/total_col })
remove(data)
tablature <- as.data.frame.matrix(prop.table(table(dataM)) * 100)
apply(teblature, 2, FUN = sum)
sum_tablatureD <- sum(tablature$dataM[4])
sum_tablatureR <- sum(tablature$dataM[8])
sum_tablatureD
sum_tablatureR
# --------------------------------------------------------------------------------------------------------
table(dataM)
sum_tablatureD <- dataM[4] / 100
sum_tablatureD <- Copy_of_Corona_Virus_Stats[4] / 100
sum_tablatureR <- Copy_of_Corona_Virus_Stats[8] / 100
sum_tablatureD
sum_tablatureR
sum_tablatureD <- Copy_of_Corona_Virus_Stats[5] / 100
sum_tablatureD
sum_tablatureR
plot(sum_tablatureD, sum_tablatureR)
x <- dataM[1]
y <- dataM[2]
d <- read.table("data.txt", header = T)
plot(d$y~d$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
title("Data", xlab = "X", ylab = "Y")
plot(d$y~d$x, ann = FALSE, type = "n")
x <- dataM[1]
y <- dataM[2]
d <- read.table("data.txt", header = T)
plot(d$y~d$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
title("Data", xlab = "X", ylab = "Y")
with(dataM,
barplot(
table(dataM[1], dataM[2]),
beside = TRUE,
legend = TRUE)
)
RandT <- cro(dataM[1], dataM[2])
RandT
x <- Copy_of_Corona_Virus_Stats[1]
y <- Copy_of_Corona_Virus_Stats[2]
d <- read.table("data.txt", header = T)
plot(d$y~d$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
title("Data", xlab = "X", ylab = "Y")
with(Copy_of_Corona_Virus_Stats,
barplot(
table(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2]),
beside = TRUE,
legend = TRUE)
)
with(Copy_of_Corona_Virus_Stats,
barplot(
table(sum_tablatureD, sum_tablatureR),
beside = TRUE,
legend = TRUE)
)
with(Copy_of_Corona_Virus_Stats,
barplot(
table(sum_tablatureD, sum_tablatureR),
beside = TRUE,
legend = TRUE)
title("Data", xlab = "X", ylab = "Y")
)
with(Copy_of_Corona_Virus_Stats,
barplot(
table(sum_tablatureD, sum_tablatureR),
beside = TRUE,
legend = TRUE, title("Data", xlab = "X", ylab = "Y"))
)
with(Copy_of_Corona_Virus_Stats,
barplot(
table(sum_tablatureR, sum_tablatureD),
beside = TRUE,
legend = TRUE, title("Data", xlab = "X", ylab = "Y"))
)
with(Copy_of_Corona_Virus_Stats,
barplot(
table(sum_tablatureR, sum_tablatureD),
beside = TRUE,
legend = TRUE,
title("Data", xlab = "X", ylab = "Y")
)
)
with(Copy_of_Corona_Virus_Stats,
plot(
table(sum_tablatureR, sum_tablatureD),
beside = TRUE,
legend = TRUE,
title("Data", xlab = "X", ylab = "Y")
)
)
with(Copy_of_Corona_Virus_Stats,
plot(
table(sum_tablatureR, sum_tablatureD),
beside = TRUE,
legend = TRUE,
title("Data", xlab = "X", ylab = "Y"),
main = "plot(table(sum_tablatureR, sum_tablatureD), beside = TRUE, legend = TRUE, title('Data', xlab = 'X', ylab = 'Y')"
)
)
with(Copy_of_Corona_Virus_Stats,
plot(
table(sum_tablatureR, sum_tablatureD),
beside = TRUE,
legend = TRUE,
title("Data", xlab = "X", ylab = "Y"),
main = "plot(table(sum_tablatureR, sum_tablatureD), beside = TRUE, legend = TRUE"
)
)
with(Copy_of_Corona_Virus_Stats,
plot(
table(sum_tablatureR, sum_tablatureD),
beside = TRUE,
legend = TRUE,
title("Data", xlab = "X", ylab = "Y")
)
)
with(Copy_of_Corona_Virus_Stats,
plot(
table(rpois(sum_tablatureR, sum_tablatureD)),
beside = TRUE,
legend = TRUE,
title("Data", xlab = "X", ylab = "Y")
)
)
with(Copy_of_Corona_Virus_Stats,
plot(
table(rpois(sum_tablatureR, sum_tablatureD)),
beside = TRUE,
legend = TRUE,
title("Data", xlab = "X", ylab = "Y")
)
)
plot(
table(rpois(sum_tablatureD,sum_tablatureR)),
main = "plot(table(rpois(sum_tablatureD,sum_tablatureR)))"
)
sum_tablatureRE <- Copy_of_Corona_Virus_Stats[1] / 100
sum_tablatureT <- Copy_of_Corona_Virus_Stats[2] / 100
sum_tablatureT
sum_tablatureRE
sum_tablatureD <- Copy_of_Corona_Virus_Stats[5] / 100
sum_tablatureR <- Copy_of_Corona_Virus_Stats[8] / 100
sum_tablatureRE <- Copy_of_Corona_Virus_Stats[1] / 100
sum_tablatureT <- Copy_of_Corona_Virus_Stats[2] / 100
sum_tablatureRT <- Copy_of_Corona_Virus_Stats[1] / 100
sum_tablatureT <- Copy_of_Corona_Virus_Stats[2] / 100
sum_tablatureT
sum_tablatureRT
sum_tablatureRT <- Copy_of_Corona_Virus_Stats[1] / 100
Copy_of_Corona_Virus_Stats[2]
sum_tablatureT < Copy_of_Corona_Virus_Stats[2]
differance <- sum_tablatureT < Copy_of_Corona_Virus_Stats[2]
cro(sum_tablatureT, Copy_of_Corona_Virus_Stats[2], differance)
cro(differance)
table(sum_tablatureT, differance)
table(sum_tablatureT, Copy_of_Corona_Virus_Stats[2])
td <- table(sum_tablatureT, Copy_of_Corona_Virus_Stats[2])
plot(td)
sum_tablatureD
sum_tablatureR
tab_cols(sum_tablatureD,sum_tablatureR)
comparingD = data.frame(a = runif(sum_tablatureD), b = runif(Copy_of_Corona_Virus_Stats[5]))
comparingD
comparingD = data.frame(a = runif(sum_tablatureD), b = runif(Copy_of_Corona_Virus_Stats[5]))
print(sum_tablatureD, sum_tablatureR)
print(sum_tablatureD)
print_x <- tabel(sum_tablatureD,sum_tablatureR)
print(print_x, zero.print = "NaN")
print_x <- table(sum_tablatureD,sum_tablatureR)
remove(td)
print(print_x, zero.print = "NaN")
sum_tablatureD <- sample(Copy_of_Corona_Virus_Stats[5] / 100, 100, replace = TRUE)
sum_tablatureR <- sample(Copy_of_Corona_Virus_Stats[8] / 100, 100, replace = TRUE)
print_x <- table(sum_tablatureD,sum_tablatureR)
print(print_x, zero.print = "NaN")
sum_tablatureD <- sample(Copy_of_Corona_Virus_Stats[5] / 100, replace = TRUE)
sum_tablatureR <- sample(Copy_of_Corona_Virus_Stats[8] / 100, replace = TRUE)
print_x <- table(sum_tablatureD,sum_tablatureR)
print(print_x, zero.print = "NaN")
(print_x <- table(sum_tablatureD,sum_tablatureR))
(print_x <- table(sum_tablatureD,sum_tablatureR))
print(print_x, zero.print = "NaN")
print(print_x)
sum_tablatureD <- sample(Copy_of_Corona_Virus_Stats[5] / 100)
sum_tablatureR <- sample(Copy_of_Corona_Virus_Stats[8] / 100)
(print_x <- table(sum_tablatureD,sum_tablatureR))
cat(sprintf("<set name = \"%s\" value = \"%f\" ></set>\n", Copy_of_Corona_Virus_Stats$`Total Deaths`, Copy_of_Corona_Virus_Stats$Recoveries))
cat(sprintf("<set Total Deaths = \"%s\", Recoveries = \"%f\" ></set>\n", Copy_of_Corona_Virus_Stats$`Total Deaths`, Copy_of_Corona_Virus_Stats$Recoveries))
cat(sprintf("<set Total Deaths = \"%s\", Recoveries = \"%s\" ></set>\n", Copy_of_Corona_Virus_Stats$`Total Deaths`, Copy_of_Corona_Virus_Stats$Recoveries))
sum_tablatureD <- Copy_of_Corona_Virus_Stats[5] / 100
sum_tablatureR <- Copy_of_Corona_Virus_Stats[8] / 100
sum
summa
summa <- summary(Copy_of_Corona_Virus_Stats[1])
summa
RandT
new_numbers_dividing <- cat(sprintf("<set New Total Deaths = \"%s\", New Recoveries = \"%s\" ></set>\n", Copy_of_Corona_Virus_Stats$`Total Deaths`, Copy_of_Corona_Virus_Stats$Recoveries))
new_numbers_dividing
new_numbers_dividing
new_numbers_dividing <- cat(sprintf("<set New Total Deaths = \"%f\", New Recoveries = \"%f\" ></set>\n", Copy_of_Corona_Virus_Stats$`Total Deaths`, Copy_of_Corona_Virus_Stats$Recoveries))
new_numbers_dividing <- cat(sprintf("<set New Total Deaths = \"%f\", New Recoveries = \"%f\" ></set>\n", sum_tablatureD, sum_tablatureR))
new_numbers_dividing <- cat(sprintf("<set New Total Deaths = \"%f\", New Recoveries = \"%f\" ></set>\n", sum_tablatureD$`Total Deaths`, sum_tablatureR$Recoveries))
new_numbers_divided <- cat(sprintf("<set New Total Deaths = \"%f\", New Recoveries = \"%f\" "%"></set>\n", sum_tablatureD$`Total Deaths`, sum_tablatureR$Recoveries))
new_numbers_divided <- cat(sprintf("<set New Total Deaths = \"%f\", New Recoveries = \"%f\" '%'></set>\n", sum_tablatureD$`Total Deaths`, sum_tablatureR$Recoveries))
recoveries <- cat(sprintf("<set Recoveries = \"%s\", New Recoveries = \"%s\" ></set>\n", Copy_of_Corona_Virus_Stats$Recoveries, sum_tablatureD$Recoveries))
recoveries <- cat(sprintf("<set Recoveries = \"%s\", New Recoveries = \"%s\" ></set>\n", Copy_of_Corona_Virus_Stats$Recoveries, sum_tablatureR$Recoveries))
Copy_of_Corona_Virus_Stats[2]
Copy_of_Corona_Virus_Stats[2:2]
summa
Copy_of_Corona_Virus_Stats[2:2]
Copy_of_Corona_Virus_Stats[2:1]
Copy_of_Corona_Virus_Stats[5:8]
Copy_of_Corona_Virus_Stats[5:0:0:8]
Copy_of_Corona_Virus_Stats[5:1:8]
Copy_of_Corona_Virus_Stats[5:8, 1:2]
Copy_of_Corona_Virus_Stats[5:8]
Copy_of_Corona_Virus_Stats[1:2]
Copy_of_Corona_Virus_Stats[1,'|',:2]
Copy_of_Corona_Virus_Stats[1+'|'+:2]
Copy_of_Corona_Virus_Stats[1+2]
Copy_of_Corona_Virus_Stats[5+8]
Copy_of_Corona_Virus_Stats[1:2]
RandT <- cro(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
RandT
library(expss)
RandT <- cro(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
RandT
# ---- Or / eða ------
Copy_of_Corona_Virus_Stats[1:2]
remove(y)
remove(x)
x <- Copy_of_Corona_Virus_Stats[1]
y <- Copy_of_Corona_Virus_Stats[2]
d <- read.table("data.txt", header = T)
plot(d$y~d$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
title("Data", xlab = "X", ylab = "Y")
x <- Copy_of_Corona_Virus_Stats[1]
y <- Copy_of_Corona_Virus_Stats[2]
d <- read.table("data.txt", header = T)
plot.new(d$y~d$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
title("Data", xlab = "X", ylab = "Y")
x <- Copy_of_Corona_Virus_Stats[1]
y <- Copy_of_Corona_Virus_Stats[2]
d <- read.table("data.txt", header = T)
plot.new(d$y~d$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
original_numbers <- cat(sprintf("<set Total Deaths = \"%s\", Recoveries = \"%s\" ></set>\n", Copy_of_Corona_Virus_Stats$`Total Deaths`, Copy_of_Corona_Virus_Stats$Recoveries))
new_numbers_divided <- cat(sprintf("<set New Total Deaths = \"%f\", New Recoveries = \"%f\" ></set>\n", sum_tablatureD$`Total Deaths`, sum_tablatureR$Recoveries))
total_Deaths <- cat(sprintf("<set Total Deaths = \"%s\", New Total Deaths = \"%s\" ></set>\n", Copy_of_Corona_Virus_Stats$`Total Deaths`, sum_tablatureD$`Total Deaths`))
recoveries <- cat(sprintf("<set Recoveries = \"%s\", New Recoveries = \"%s\" ></set>\n", Copy_of_Corona_Virus_Stats$Recoveries, sum_tablatureR$Recoveries))
Copy_of_Corona_Virus_Stats[1:2]
install.packages("DataCombine")
library(DataCombine)
B <- c(1:10)
Data <- data.frame(Copy_of_Corona_Virus_Stats[2])
Out <- PercChange(Data, Var = 'B',
type = 'proportion',
NewVar = 'PercentChange',
slideBy = -2)
Out
B <- c(1:10)
Data <- data.frame(Copy_of_Corona_Virus_Stats[2], B)
Out <- PercChange(Data, Var = 'B',
type = 'proportion',
NewVar = 'PercentChange',
slideBy = -2)
Out
B <- c(1:16)
Data <- data.frame(Copy_of_Corona_Virus_Stats[2], B)
Out <- PercChange(Data, Var = 'B',
type = 'proportion',
NewVar = 'PercentChange',
slideBy = -2)
Out
remove.packages("DataCombine")
remove.package("DataCombine")
which(Copy_of_Corona_Virus_Stats$`Total Confirmed` != dplyr::lag(Copy_of_Corona_Virus_Stats$`Total Confirmed`))
which(Copy_of_Corona_Virus_Stats$`Total Confirmed` != dplyr::lag(Copy_of_Corona_Virus_Stats$`Total Confirmed`))
foreach(
...,
.combine,
.init,
.final = NULL,
.inorder = TRUE,
.multicombine = FALSE,
.maxcombine = if (.multicombine) 100 else 2,
.errorhandling = c("stop", "remove", "pass"),
.packages = NULL,
.export = NULL,
.noexport = NULL,
.verbose = FALSE
)
remove(Out)
