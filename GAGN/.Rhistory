#RandT
remove(RandT)
plot(Copy_of_Corona_Virus_Stats[1])
summary(data[1])
data <- Copy_of_Corona_Virus_Stats
summary(data[1])
with(data,
barplot(
table(data[1], data[2]),
beside = TRUE,
legend = TRUE)
)
x <- data[1]
y <- data[2]
d <- read.table("data.txt", header = T)
plot(d$y~s$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
title("Data", xlab = "X", ylab = "Y")
pcts = lapply(data[,-1], function(x){ x /total_col })
total_col = apply(data[,-1], 1, sum)
pcts = lapply(data[,-1], function(n){ n/total_col })
total_col <- apply(data[,-1], 1, sum)
pcts <- lapply(data[,-1], function(n){ n/total_col })
remove(data)
tablature <- as.data.frame.matrix(prop.table(table(dataM)) * 100)
apply(teblature, 2, FUN = sum)
sum_tablatureD <- sum(tablature$dataM[4])
sum_tablatureR <- sum(tablature$dataM[8])
sum_tablatureD
sum_tablatureR
# --------------------------------------------------------------------------------------------------------
table(dataM)
sum_tablatureD <- dataM[4] / 100
sum_tablatureD <- Copy_of_Corona_Virus_Stats[4] / 100
sum_tablatureR <- Copy_of_Corona_Virus_Stats[8] / 100
sum_tablatureD
sum_tablatureR
sum_tablatureD <- Copy_of_Corona_Virus_Stats[5] / 100
sum_tablatureD
sum_tablatureR
plot(sum_tablatureD, sum_tablatureR)
x <- dataM[1]
y <- dataM[2]
d <- read.table("data.txt", header = T)
plot(d$y~d$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
title("Data", xlab = "X", ylab = "Y")
plot(d$y~d$x, ann = FALSE, type = "n")
x <- dataM[1]
y <- dataM[2]
d <- read.table("data.txt", header = T)
plot(d$y~d$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
title("Data", xlab = "X", ylab = "Y")
with(dataM,
barplot(
table(dataM[1], dataM[2]),
beside = TRUE,
legend = TRUE)
)
RandT <- cro(dataM[1], dataM[2])
RandT
x <- Copy_of_Corona_Virus_Stats[1]
y <- Copy_of_Corona_Virus_Stats[2]
d <- read.table("data.txt", header = T)
plot(d$y~d$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
title("Data", xlab = "X", ylab = "Y")
with(Copy_of_Corona_Virus_Stats,
barplot(
table(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2]),
beside = TRUE,
legend = TRUE)
)
with(Copy_of_Corona_Virus_Stats,
barplot(
table(sum_tablatureD, sum_tablatureR),
beside = TRUE,
legend = TRUE)
)
with(Copy_of_Corona_Virus_Stats,
barplot(
table(sum_tablatureD, sum_tablatureR),
beside = TRUE,
legend = TRUE)
title("Data", xlab = "X", ylab = "Y")
)
with(Copy_of_Corona_Virus_Stats,
barplot(
table(sum_tablatureD, sum_tablatureR),
beside = TRUE,
legend = TRUE, title("Data", xlab = "X", ylab = "Y"))
)
with(Copy_of_Corona_Virus_Stats,
barplot(
table(sum_tablatureR, sum_tablatureD),
beside = TRUE,
legend = TRUE, title("Data", xlab = "X", ylab = "Y"))
)
with(Copy_of_Corona_Virus_Stats,
barplot(
table(sum_tablatureR, sum_tablatureD),
beside = TRUE,
legend = TRUE,
title("Data", xlab = "X", ylab = "Y")
)
)
with(Copy_of_Corona_Virus_Stats,
plot(
table(sum_tablatureR, sum_tablatureD),
beside = TRUE,
legend = TRUE,
title("Data", xlab = "X", ylab = "Y")
)
)
with(Copy_of_Corona_Virus_Stats,
plot(
table(sum_tablatureR, sum_tablatureD),
beside = TRUE,
legend = TRUE,
title("Data", xlab = "X", ylab = "Y"),
main = "plot(table(sum_tablatureR, sum_tablatureD), beside = TRUE, legend = TRUE, title('Data', xlab = 'X', ylab = 'Y')"
)
)
with(Copy_of_Corona_Virus_Stats,
plot(
table(sum_tablatureR, sum_tablatureD),
beside = TRUE,
legend = TRUE,
title("Data", xlab = "X", ylab = "Y"),
main = "plot(table(sum_tablatureR, sum_tablatureD), beside = TRUE, legend = TRUE"
)
)
with(Copy_of_Corona_Virus_Stats,
plot(
table(sum_tablatureR, sum_tablatureD),
beside = TRUE,
legend = TRUE,
title("Data", xlab = "X", ylab = "Y")
)
)
with(Copy_of_Corona_Virus_Stats,
plot(
table(rpois(sum_tablatureR, sum_tablatureD)),
beside = TRUE,
legend = TRUE,
title("Data", xlab = "X", ylab = "Y")
)
)
with(Copy_of_Corona_Virus_Stats,
plot(
table(rpois(sum_tablatureR, sum_tablatureD)),
beside = TRUE,
legend = TRUE,
title("Data", xlab = "X", ylab = "Y")
)
)
plot(
table(rpois(sum_tablatureD,sum_tablatureR)),
main = "plot(table(rpois(sum_tablatureD,sum_tablatureR)))"
)
sum_tablatureRE <- Copy_of_Corona_Virus_Stats[1] / 100
sum_tablatureT <- Copy_of_Corona_Virus_Stats[2] / 100
sum_tablatureT
sum_tablatureRE
sum_tablatureD <- Copy_of_Corona_Virus_Stats[5] / 100
sum_tablatureR <- Copy_of_Corona_Virus_Stats[8] / 100
sum_tablatureRE <- Copy_of_Corona_Virus_Stats[1] / 100
sum_tablatureT <- Copy_of_Corona_Virus_Stats[2] / 100
sum_tablatureRT <- Copy_of_Corona_Virus_Stats[1] / 100
sum_tablatureT <- Copy_of_Corona_Virus_Stats[2] / 100
sum_tablatureT
sum_tablatureRT
sum_tablatureRT <- Copy_of_Corona_Virus_Stats[1] / 100
Copy_of_Corona_Virus_Stats[2]
sum_tablatureT < Copy_of_Corona_Virus_Stats[2]
differance <- sum_tablatureT < Copy_of_Corona_Virus_Stats[2]
cro(sum_tablatureT, Copy_of_Corona_Virus_Stats[2], differance)
cro(differance)
table(sum_tablatureT, differance)
table(sum_tablatureT, Copy_of_Corona_Virus_Stats[2])
td <- table(sum_tablatureT, Copy_of_Corona_Virus_Stats[2])
plot(td)
sum_tablatureD
sum_tablatureR
tab_cols(sum_tablatureD,sum_tablatureR)
comparingD = data.frame(a = runif(sum_tablatureD), b = runif(Copy_of_Corona_Virus_Stats[5]))
comparingD
comparingD = data.frame(a = runif(sum_tablatureD), b = runif(Copy_of_Corona_Virus_Stats[5]))
print(sum_tablatureD, sum_tablatureR)
print(sum_tablatureD)
print_x <- tabel(sum_tablatureD,sum_tablatureR)
print(print_x, zero.print = "NaN")
print_x <- table(sum_tablatureD,sum_tablatureR)
remove(td)
print(print_x, zero.print = "NaN")
sum_tablatureD <- sample(Copy_of_Corona_Virus_Stats[5] / 100, 100, replace = TRUE)
sum_tablatureR <- sample(Copy_of_Corona_Virus_Stats[8] / 100, 100, replace = TRUE)
print_x <- table(sum_tablatureD,sum_tablatureR)
print(print_x, zero.print = "NaN")
sum_tablatureD <- sample(Copy_of_Corona_Virus_Stats[5] / 100, replace = TRUE)
sum_tablatureR <- sample(Copy_of_Corona_Virus_Stats[8] / 100, replace = TRUE)
print_x <- table(sum_tablatureD,sum_tablatureR)
print(print_x, zero.print = "NaN")
(print_x <- table(sum_tablatureD,sum_tablatureR))
(print_x <- table(sum_tablatureD,sum_tablatureR))
print(print_x, zero.print = "NaN")
print(print_x)
sum_tablatureD <- sample(Copy_of_Corona_Virus_Stats[5] / 100)
sum_tablatureR <- sample(Copy_of_Corona_Virus_Stats[8] / 100)
(print_x <- table(sum_tablatureD,sum_tablatureR))
cat(sprintf("<set name = \"%s\" value = \"%f\" ></set>\n", Copy_of_Corona_Virus_Stats$`Total Deaths`, Copy_of_Corona_Virus_Stats$Recoveries))
cat(sprintf("<set Total Deaths = \"%s\", Recoveries = \"%f\" ></set>\n", Copy_of_Corona_Virus_Stats$`Total Deaths`, Copy_of_Corona_Virus_Stats$Recoveries))
cat(sprintf("<set Total Deaths = \"%s\", Recoveries = \"%s\" ></set>\n", Copy_of_Corona_Virus_Stats$`Total Deaths`, Copy_of_Corona_Virus_Stats$Recoveries))
sum_tablatureD <- Copy_of_Corona_Virus_Stats[5] / 100
sum_tablatureR <- Copy_of_Corona_Virus_Stats[8] / 100
sum
summa
summa <- summary(Copy_of_Corona_Virus_Stats[1])
summa
RandT
new_numbers_dividing <- cat(sprintf("<set New Total Deaths = \"%s\", New Recoveries = \"%s\" ></set>\n", Copy_of_Corona_Virus_Stats$`Total Deaths`, Copy_of_Corona_Virus_Stats$Recoveries))
new_numbers_dividing
new_numbers_dividing
new_numbers_dividing <- cat(sprintf("<set New Total Deaths = \"%f\", New Recoveries = \"%f\" ></set>\n", Copy_of_Corona_Virus_Stats$`Total Deaths`, Copy_of_Corona_Virus_Stats$Recoveries))
new_numbers_dividing <- cat(sprintf("<set New Total Deaths = \"%f\", New Recoveries = \"%f\" ></set>\n", sum_tablatureD, sum_tablatureR))
new_numbers_dividing <- cat(sprintf("<set New Total Deaths = \"%f\", New Recoveries = \"%f\" ></set>\n", sum_tablatureD$`Total Deaths`, sum_tablatureR$Recoveries))
new_numbers_divided <- cat(sprintf("<set New Total Deaths = \"%f\", New Recoveries = \"%f\" "%"></set>\n", sum_tablatureD$`Total Deaths`, sum_tablatureR$Recoveries))
new_numbers_divided <- cat(sprintf("<set New Total Deaths = \"%f\", New Recoveries = \"%f\" '%'></set>\n", sum_tablatureD$`Total Deaths`, sum_tablatureR$Recoveries))
recoveries <- cat(sprintf("<set Recoveries = \"%s\", New Recoveries = \"%s\" ></set>\n", Copy_of_Corona_Virus_Stats$Recoveries, sum_tablatureD$Recoveries))
recoveries <- cat(sprintf("<set Recoveries = \"%s\", New Recoveries = \"%s\" ></set>\n", Copy_of_Corona_Virus_Stats$Recoveries, sum_tablatureR$Recoveries))
Copy_of_Corona_Virus_Stats[2]
Copy_of_Corona_Virus_Stats[2:2]
summa
Copy_of_Corona_Virus_Stats[2:2]
Copy_of_Corona_Virus_Stats[2:1]
Copy_of_Corona_Virus_Stats[5:8]
Copy_of_Corona_Virus_Stats[5:0:0:8]
Copy_of_Corona_Virus_Stats[5:1:8]
Copy_of_Corona_Virus_Stats[5:8, 1:2]
Copy_of_Corona_Virus_Stats[5:8]
Copy_of_Corona_Virus_Stats[1:2]
Copy_of_Corona_Virus_Stats[1,'|',:2]
Copy_of_Corona_Virus_Stats[1+'|'+:2]
Copy_of_Corona_Virus_Stats[1+2]
Copy_of_Corona_Virus_Stats[5+8]
Copy_of_Corona_Virus_Stats[1:2]
RandT <- cro(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
RandT
library(expss)
RandT <- cro(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2])
RandT
# ---- Or / eÃ°a ------
Copy_of_Corona_Virus_Stats[1:2]
remove(y)
remove(x)
x <- Copy_of_Corona_Virus_Stats[1]
y <- Copy_of_Corona_Virus_Stats[2]
d <- read.table("data.txt", header = T)
plot(d$y~d$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
title("Data", xlab = "X", ylab = "Y")
x <- Copy_of_Corona_Virus_Stats[1]
y <- Copy_of_Corona_Virus_Stats[2]
d <- read.table("data.txt", header = T)
plot.new(d$y~d$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
title("Data", xlab = "X", ylab = "Y")
x <- Copy_of_Corona_Virus_Stats[1]
y <- Copy_of_Corona_Virus_Stats[2]
d <- read.table("data.txt", header = T)
plot.new(d$y~d$x, ann = FALSE, type = "n")
lines(d$y~d$x, lwd = 2)
original_numbers <- cat(sprintf("<set Total Deaths = \"%s\", Recoveries = \"%s\" ></set>\n", Copy_of_Corona_Virus_Stats$`Total Deaths`, Copy_of_Corona_Virus_Stats$Recoveries))
new_numbers_divided <- cat(sprintf("<set New Total Deaths = \"%f\", New Recoveries = \"%f\" ></set>\n", sum_tablatureD$`Total Deaths`, sum_tablatureR$Recoveries))
total_Deaths <- cat(sprintf("<set Total Deaths = \"%s\", New Total Deaths = \"%s\" ></set>\n", Copy_of_Corona_Virus_Stats$`Total Deaths`, sum_tablatureD$`Total Deaths`))
recoveries <- cat(sprintf("<set Recoveries = \"%s\", New Recoveries = \"%s\" ></set>\n", Copy_of_Corona_Virus_Stats$Recoveries, sum_tablatureR$Recoveries))
Copy_of_Corona_Virus_Stats[1:2]
install.packages("DataCombine")
library(DataCombine)
B <- c(1:10)
Data <- data.frame(Copy_of_Corona_Virus_Stats[2])
Out <- PercChange(Data, Var = 'B',
type = 'proportion',
NewVar = 'PercentChange',
slideBy = -2)
Out
B <- c(1:10)
Data <- data.frame(Copy_of_Corona_Virus_Stats[2], B)
Out <- PercChange(Data, Var = 'B',
type = 'proportion',
NewVar = 'PercentChange',
slideBy = -2)
Out
B <- c(1:16)
Data <- data.frame(Copy_of_Corona_Virus_Stats[2], B)
Out <- PercChange(Data, Var = 'B',
type = 'proportion',
NewVar = 'PercentChange',
slideBy = -2)
Out
remove.packages("DataCombine")
remove.package("DataCombine")
which(Copy_of_Corona_Virus_Stats$`Total Confirmed` != dplyr::lag(Copy_of_Corona_Virus_Stats$`Total Confirmed`))
which(Copy_of_Corona_Virus_Stats$`Total Confirmed` != dplyr::lag(Copy_of_Corona_Virus_Stats$`Total Confirmed`))
foreach(
...,
.combine,
.init,
.final = NULL,
.inorder = TRUE,
.multicombine = FALSE,
.maxcombine = if (.multicombine) 100 else 2,
.errorhandling = c("stop", "remove", "pass"),
.packages = NULL,
.export = NULL,
.noexport = NULL,
.verbose = FALSE
)
remove(Out)
library(readr)
covid_19_clean_complete <- read_csv("D:/SkÃ³li/Forritun-2020/GAGN/Verkefni Ã­ GAGN/raunverulega verkefni 3/corona 3c/corona-virus-report/covid_19_clean_complete.csv")
View(covid_19_clean_complete)
summary(covid_19_clean_complete)
remove(B)
summary(covid_19_clean_complete)
# covid_19_clean_complete
library(expss)
cat(sprintf("<set Confirmed = \"%f\", Total Deaths = \"%f\", Recoveries = \"%f\" ></set>\n", covid_19_clean_complete$Confirmed, covid_19_clean_complete$Deaths, covid_19_clean_complete$Recovered))
cat(sprintf("<set country = \"%n\"><\set>\n"), covid_19_clean_complete$`Country/Region`)
cat(sprintf("<set Confirmed = \"%f\", Total Deaths = \"%f\", Recoveries = \"%f\" ></set>\n", covid_19_clean_complete$Confirmed, covid_19_clean_complete$Deaths, covid_19_clean_complete$Recovered))
cat(sprintf("<set country = \"%n\" Confirmed = \"%f\", Total Deaths = \"%f\", Recoveries = \"%f\" ></set>\n", covid_19_clean_complete$`Country/Region`,covid_19_clean_complete$Confirmed, covid_19_clean_complete$Deaths, covid_19_clean_complete$Recovered))
cat(sprintf("<set country = \"%s\" Confirmed = \"%f\", Total Deaths = \"%f\", Recoveries = \"%f\" ></set>\n", covid_19_clean_complete$`Country/Region`,covid_19_clean_complete$Confirmed, covid_19_clean_complete$Deaths, covid_19_clean_complete$Recovered))
cat(sprintf("country = \"%s\" Confirmed = \"%f\", Total Deaths = \"%f\", Recoveries = \"%f\"\n", covid_19_clean_complete$`Country/Region`,covid_19_clean_complete$Confirmed, covid_19_clean_complete$Deaths, covid_19_clean_complete$Recovered))
cat(sprintf("country = \"%s\" , Confirmed = \"%f\" , Total Deaths = \"%f\" , Recoveries = \"%f\"\n", covid_19_clean_complete$`Country/Region`,covid_19_clean_complete$Confirmed, covid_19_clean_complete$Deaths, covid_19_clean_complete$Recovered))
cat(sprintf("country = \"%s\" , Confirmed = \"%f\" , Total Deaths = \"%f\" , Recoveries = \"%f\"\n", covid_19_clean_complete$`Country/Region`,covid_19_clean_complete$Confirmed, covid_19_clean_complete$Deaths, covid_19_clean_complete$Recovered))
cro(covid_19_clean_complete[2])
cro("names",covid_19_clean_complete[2])
cro(covid_19_clean_complete[2] + "names")
cro(covid_19_clean_complete[2], "names")
cro(covid_19_clean_complete[2])
cro(covid_19_clean_complete[2:6])
cro(covid_19_clean_complete[6:2])
cat(sprintf("country = \"%s\" , DATE = \"%s\" , Confirmed = \"%f\" , Total Deaths = \"%f\" , Recoveries = \"%f\"\n", covid_19_clean_complete$`Country/Region`, covid_19_clean_complete$Date,covid_19_clean_complete$Confirmed, covid_19_clean_complete$Deaths, covid_19_clean_complete$Recovered))
cat(sprintf("country = \"%s\" ,
DATE = \"%s\" ,
Confirmed = \"%f\" ,
Total Deaths = \"%f\" ,
Recoveries = \"%f\"\n",
covid_19_clean_complete$`Country/Region`,
covid_19_clean_complete$Date,
covid_19_clean_complete$Confirmed,
covid_19_clean_complete$Deaths,
covid_19_clean_complete$Recovered
)
)
cat(sprintf("country = \"%s\" ,
DATE = \"%s\" ,
Confirmed = \"%f\" ,
Total Deaths = \"%f\" ,
Recoveries = \"%f\"\n",
cro(covid_19_clean_complete[2])
cro(covid_19_clean_complete[2])
# covid_19_clean_complete comes from "https://www.kaggle.com/imdevskp/corona-virus-report"
library(expss)
summary(covid_19_clean_complete)
cro(covid_19_clean_complete[2])
summary(covid_19_clean_complete)
cro(covid_19_clean_complete[2])
cat(sprintf("country = \"%s\" ,
DATE = \"%s\" ,
Confirmed = \"%f\" ,
Total Deaths = \"%f\" ,
Recoveries = \"%f\"\n",
covid_19_clean_complete$`Country/Region`,
covid_19_clean_complete$Date,
covid_19_clean_complete$Confirmed,
covid_19_clean_complete$Deaths,
covid_19_clean_complete$Recovered
)
)
library(readr)
world_covid19_history <- read_csv("D:/SkÃ³li/Forritun-2020/GAGN/Verkefni Ã­ GAGN/verk4/world_covid19_history.csv")
View(world_covid19_history)
cro(covid_19_clean_complete[2])
summary(covid_19_clean_complete)
summary(covid_19_clean_complete)
cat(sprintf("country = \"%s\" ,
DATE = \"%s\" ,
Confirmed = \"%f\" ,
Total Deaths = \"%f\" ,
Recoveries = \"%f\"\n",
covid_19_clean_complete$`Country/Region`,
covid_19_clean_complete$Date,
covid_19_clean_complete$Confirmed,
covid_19_clean_complete$Deaths,
covid_19_clean_complete$Recovered
)
)
cat(sprintf("country = \"%s\" ,
DATE = \"%s\" ,
Confirmed = \"%s\" ,
Total Deaths = \"%s\" ,
Recoveries = \"%s\"\n",
covid_19_clean_complete$`Country/Region`,
covid_19_clean_complete$Date,
covid_19_clean_complete$Confirmed,
covid_19_clean_complete$Deaths,
covid_19_clean_complete$Recovered
)
)
cat(sprintf("country = \"%s\" ,
DATE = \"%s\" ,
Confirmed = \"%s\" ,
Total Deaths = \"%s\" ,
Recoveries = \"%s\" \n \n",
covid_19_clean_complete$`Country/Region`,
covid_19_clean_complete$Date,
covid_19_clean_complete$Confirmed,
covid_19_clean_complete$Deaths,
covid_19_clean_complete$Recovered
)
)
install.packages(rjson)
install.packages("rjson")
remove.packages("rjson")
with(Copy_of_Corona_Virus_Stats,
barplot(
table(Copy_of_Corona_Virus_Stats[1], Copy_of_Corona_Virus_Stats[2]),
beside = TRUE,
legend = TRUE)
)
emp.data <- data.frame(
name = c("Gillian Keene", "GuÃ°mundur JÃ³nsson", "Marla DrÃ¶fn Diego", "KonrÃ¡Ã° GuÃ°mundsson", "Renate Hertzenslust", "SigurÃ°ur SÃ­vertssen"),
id = c(1001, 1002, 1003, 1004, 1005, 1006),
finalrateEdlis <- c(9, 4, 7.5, 9.5, 5.0, 6.6, 8.1),
finalrateEfna <- c(8.4,6.9,5.5,9.8,4.0,8.8),
finalrateMath <- c(9.0,6.7,8.5,5.0,9.0,9.7),
cratuation_date = as.Date(c("2012-05-25", "2013-12-17", "2014-05-15", "2014-05-15", "2014-12-19", "2015-05-27")),
stringsAsFactors = FALSE
)
print(emp.data)
emp.data <- data.frame(
name <- c("Gillian Keene", "GuÃ°mundur JÃ³nsson", "Marla DrÃ¶fn Diego", "KonrÃ¡Ã° GuÃ°mundsson", "Renate Hertzenslust", "SigurÃ°ur SÃ­vertssen"),
id <- c(1001, 1002, 1003, 1004, 1005, 1006),
finalrateEdlis <- c(9, 4, 7.5, 9.5, 5.0, 6.6, 8.1),
finalrateEfna <- c(8.4,6.9,5.5,9.8,4.0,8.8),
finalrateMath <- c(9.0,6.7,8.5,5.0,9.0,9.7),
cratuation_date = as.Date(c("2012-05-25", "2013-12-17", "2014-05-15", "2014-05-15", "2014-12-19", "2015-05-27")),
stringsAsFactors = FALSE
)
print(emp.data)
emp.data <- data.frame(
name <- c("Gillian Keene", "GuÃ°mundur JÃ³nsson", "Marla DrÃ¶fn Diego", "KonrÃ¡Ã° GuÃ°mundsson", "Renate Hertzenslust", "SigurÃ°ur SÃ­vertssen"),
id <- c(1001, 1002, 1003, 1004, 1005, 1006),
finalrateEdlis <- c(9, 4, 7.5, 9.5, 5.0, 6.6, 8.1),
finalrateEfna <- c(8.4,6.9,5.5,9.8,4.0,8.8),
finalrateMath <- c(9.0,6.7,8.5,5.0,9.0,9.7),
cratuation_date = as.Date(c("2012-05-25", "2013-12-17", "2014-05-15", "2014-05-15", "2014-12-19", "2015-05-27")),
stringsAsFactors = FALSE
)
emp.data <- data.frame(
name = c("Gillian Keene", "GuÃ°mundur JÃ³nsson", "Marla DrÃ¶fn Diego", "KonrÃ¡Ã° GuÃ°mundsson", "Renate Hertzenslust", "SigurÃ°ur SÃ­vertssen"),
id = c(1001, 1002, 1003, 1004, 1005, 1006),
finalrateEdlis = c(9, 4, 7.5, 9.5, 5.0, 6.6, 8.1),
finalrateEfna = c(8.4,6.9,5.5,9.8,4.0,8.8),
finalrateMath = c(9.0,6.7,8.5,5.0,9.0,9.7),
cratuation_date = as.Date(c("2012-05-25", "2013-12-17", "2014-05-15", "2014-05-15", "2014-12-19", "2015-05-27")),
stringsAsFactors = FALSE
)
name <- c("Gillian Keene", "GuÃ°mundur JÃ³nsson", "Marla DrÃ¶fn Diego", "KonrÃ¡Ã° GuÃ°mundsson", "Renate Hertzenslust", "SigurÃ°ur SÃ­vertssen")
id <- c(1001, 1002, 1003, 1004, 1005, 1006)
finalrateEdlis <- c(9, 4, 7.5, 9.5, 5.0, 6.6, 8.1)
finalrateEfna <- c(8.4,6.9,5.5,9.8,4.0,8.8)
finalrateMath <- c(9.0,6.7,8.5,5.0,9.0,9.7)
cratuation_date <- as.Date(c("2012-05-25", "2013-12-17", "2014-05-15", "2014-05-15", "2014-12-19", "2015-05-27"))
emp.data <- data.frame(
name,
id,
finalrateEdlis,
finalrateEfna,
finalrateMath,
cratuation_date,
stringsAsFactors = FALSE
)
print(emp.data)
my_data_frame <- data.frame(
name,
id,
finalrateEdlis,
finalrateEfna,
finalrateMath,
cratuation_date,
stringsAsFactors = FALSE
)
print(my_data_frame)
name <- c("Gillian Keene", "GuÃ°mundur JÃ³nsson", "Marla DrÃ¶fn Diego", "KonrÃ¡Ã° GuÃ°mundsson", "Renate Hertzenslust", "SigurÃ°ur SÃ­vertssen")
id <- c(1001, 1002, 1003, 1004, 1005, 1006)
finalrateEdlis <- c(9.4, 7.5, 9.5, 5.0, 6.6, 8.1)
finalrateEfna <- c(8.4,6.9,5.5,9.8,4.0,8.8)
finalrateMath <- c(9.0,6.7,8.5,5.0,9.0,9.7)
cratuation_date <- as.Date(c("2012-05-25", "2013-12-17", "2014-05-15", "2014-05-15", "2014-12-19", "2015-05-27"))
my_data_frame <- data.frame(
name,
id,
finalrateEdlis,
finalrateEfna,
finalrateMath,
cratuation_date,
stringsAsFactors = FALSE
)
print(my_data_frame)
